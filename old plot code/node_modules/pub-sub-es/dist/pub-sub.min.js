const e=(()=>{try{return new window.BroadcastChannel("pub-sub-es")}catch(e){return{postMessage:()=>{}}}})(),s=(e,s)=>s?e.toLowerCase():e,t=(e,{caseInsensitive:t}={})=>(n,a,i=1/0)=>{const c=s(n,t);return e[c]||(e[c]=[],e.__times__[c]=[]),e[c].push(a),e.__times__[c].push(+i||1/0),{event:c,handler:a}},n=(e,{caseInsensitive:t}={})=>(n,a)=>{"object"==typeof n&&(a=n.handler,n=n.event);const i=s(n,t);if(!e[i])return;const c=e[i].indexOf(a);-1===c||c>=e[i].length||(e[i].splice(c,1),e.__times__[i].splice(c,1))},a=(e,s)=>()=>{e.forEach((e=>e(s)))},i=(t,{isGlobal:i,caseInsensitive:c,async:o}={})=>{const _=n(t);return(n,r,l={})=>{const u=s(n,c);if(!t[u])return;const b=[...t[u]];if(b.forEach(((e,s)=>{--t.__times__[u][s]<1&&_(u,e)})),o||l.async?setTimeout(a(b,r),0):a(b,r)(),i&&!l.isNoGlobalBroadcast)try{e.postMessage({event:u,news:r})}catch(e){if(!(e instanceof DOMException))throw e;console.warn(`Could not broadcast '${u}' globally. Payload is not clonable.`)}}},c=e=>()=>{Object.keys(e).filter((e=>"_"!==e[0])).forEach((s=>{e[s]=void 0,e.__times__[s]=void 0,delete e[s],delete e.__times__[s]}))},o=(e={})=>{const s=e.async||!1,a=e.caseInsensitive||!1,o=e.stack||{__times__:{}};return o.__times__||(o.__times__={}),{publish:i(o,{async:s,caseInsensitive:a}),subscribe:t(o,{caseInsensitive:a}),unsubscribe:n(o,{caseInsensitive:a}),clear:c(o),stack:o}},_={__times__:{}},r={publish:i(_,{isGlobal:!0}),subscribe:t(_),unsubscribe:n(_),clear:c(_),stack:_};e.onmessage=({data:{event:e,news:s}})=>r.publish(e,s,{isNoGlobalBroadcast:!0});export{o as createPubSub,o as default,r as globalPubSub};
