"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlobFile = exports.LocalFile = exports.RemoteFile = exports.fromUrl = exports.open = void 0;
const localFile_1 = __importDefault(require("./localFile"));
exports.LocalFile = localFile_1.default;
const remoteFile_1 = __importDefault(require("./remoteFile"));
exports.RemoteFile = remoteFile_1.default;
const blobFile_1 = __importDefault(require("./blobFile"));
exports.BlobFile = blobFile_1.default;
__exportStar(require("./filehandle"), exports);
function fromUrl(source, opts = {}) {
    return new remoteFile_1.default(source, opts);
}
exports.fromUrl = fromUrl;
function open(maybeUrl, maybePath, maybeFilehandle, opts = {}) {
    if (maybeFilehandle !== undefined) {
        return maybeFilehandle;
    }
    if (maybeUrl !== undefined) {
        return fromUrl(maybeUrl, opts);
    }
    if (maybePath !== undefined) {
        return new localFile_1.default(maybePath, opts);
    }
    throw new Error('no url, path, or filehandle provided, cannot open');
}
exports.open = open;
//# sourceMappingURL=index.js.map