export default class IndexFile {
    /**
     * @param {filehandle} filehandle
     * @param {function} [renameRefSeqs]
     */
    constructor({ filehandle, renameRefSeq = (n) => n, }) {
        this.filehandle = filehandle;
        this.renameRefSeq = renameRefSeq;
    }
    _findFirstData(data, virtualOffset) {
        const currentFdl = data.firstDataLine;
        if (currentFdl) {
            data.firstDataLine =
                currentFdl.compareTo(virtualOffset) > 0 ? virtualOffset : currentFdl;
        }
        else {
            data.firstDataLine = virtualOffset;
        }
    }
    async parse(opts = {}) {
        if (!this.setupP) {
            this.setupP = this._parse(opts).catch(e => {
                this.setupP = undefined;
                throw e;
            });
        }
        return this.setupP;
    }
    async hasRefSeq(seqId, opts = {}) {
        return !!((await this.parse(opts)).indices[seqId] || {}).binIndex;
    }
}
//# sourceMappingURL=indexFile.js.map