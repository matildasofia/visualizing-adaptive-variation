"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectTypes = void 0;
/*
 * adds some type annotations to the autoSql schema
 * for numeric fields ['uint', 'int', 'float', 'long'] "isNumeric" is added
 * for array types "isArray" is added
 * for numeric array types "isArray" and "arrayIsNumeric" is set
 *
 * @param autoSql - an autoSql schema from the peg parser
 * @return autoSql with type annotations added
 */
function detectTypes(autoSql) {
    var numericTypes = ['uint', 'int', 'float', 'long'];
    return __assign(__assign({}, autoSql), { fields: autoSql.fields.map(function (autoField) { return (__assign(__assign({}, autoField), { isArray: autoField.size && autoField.type !== 'char', arrayIsNumeric: autoField.size && numericTypes.includes(autoField.type), isNumeric: !autoField.size && numericTypes.includes(autoField.type) })); }) });
}
exports.detectTypes = detectTypes;
//# sourceMappingURL=util.js.map