/// <reference types="src/missing-types" />
import type { TextStyle } from '../../core/utils/text-style';
import type { Assembly } from '@gosling-lang/gosling-schema';
type AxisTrackOptions = {
    innerRadius: number;
    outerRadius: number;
    startAngle: number;
    endAngle: number;
    width: number;
    height: number;
    layout: 'linear' | 'circular';
    labelPosition: string;
    labelColor: string;
    labelTextOpacity: number;
    trackBorderWidth: number;
    trackBorderColor: string;
    tickPositions: 'even' | 'ends';
    fontSize: number;
    fontFamily: string;
    fontWeight: NonNullable<TextStyle['fontWeight']>;
    color: string;
    stroke: string;
    backgroundColor: string;
    showMousePosition: boolean;
    tickColor: number;
    tickFormat?: string;
    assembly?: Assembly;
    reverseOrientation?: boolean;
};
declare const _default: (new (HGC: import("@higlass/types").HGC, context: import("@higlass/tracks").Context<never, AxisTrackOptions>, options: AxisTrackOptions) => import("@higlass/tracks").Track<AxisTrackOptions>) & {
    config: import("@higlass/tracks").TrackConfig<AxisTrackOptions>;
} & {
    config: {
        availableOptions: (keyof AxisTrackOptions)[];
    };
};
export default _default;
//# sourceMappingURL=axis-track.d.ts.map