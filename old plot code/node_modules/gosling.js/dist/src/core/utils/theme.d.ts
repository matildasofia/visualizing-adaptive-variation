import * as gt from 'gosling-theme';
export type Theme = ThemeType | ThemeDeep;
export type ThemeType = keyof typeof gt.Themes;
export declare enum Themes {
    light = "light",
    dark = "dark"
}
export interface ThemeDeep {
    base: ThemeType;
    root?: RootStyle;
    track?: TrackStyle;
    legend?: LegendStyle;
    axis?: AxisStyle;
    markCommon?: MarkStyle;
    point?: MarkStyle;
    rect?: MarkStyle;
    triangle?: MarkStyle;
    area?: MarkStyle;
    line?: MarkStyle;
    bar?: MarkStyle;
    rule?: MarkStyle;
    link?: MarkStyle;
    brush?: MarkStyle;
    text?: MarkStyle & {
        textFontWeight?: 'bold' | 'normal';
        textAnchor?: 'start' | 'middle' | 'end';
    };
}
export interface CompleteThemeDeep {
    base: Required<ThemeType>;
    root: Required<RootStyle>;
    track: Required<TrackStyle>;
    legend: Required<LegendStyle>;
    axis: Required<AxisStyle>;
    markCommon: Required<MarkStyle>;
    point: Required<MarkStyle>;
    rect: Required<MarkStyle>;
    triangle: Required<MarkStyle>;
    area: Required<MarkStyle>;
    line: Required<MarkStyle>;
    bar: Required<MarkStyle>;
    rule: Required<MarkStyle>;
    link: Required<MarkStyle>;
    brush: Required<MarkStyle>;
    text: Required<MarkStyle> & Required<{
        textFontWeight?: 'bold' | 'normal';
        textAnchor?: 'start' | 'middle' | 'end';
    }>;
}
export interface RootStyle {
    background?: string;
    titleColor?: string;
    titleFontSize?: number;
    titleFontFamily?: string;
    titleAlign?: 'left' | 'middle' | 'right';
    titleFontWeight?: 'bold' | 'normal' | 'light';
    titleBackgroundColor?: string;
    subtitleColor?: string;
    subtitleFontSize?: number;
    subtitleFontFamily?: string;
    subtitleAlign?: 'left' | 'middle' | 'right';
    subtitleFontWeight?: 'bold' | 'normal' | 'light';
    subtitleBackgroundColor?: string;
    showMousePosition?: boolean;
    mousePositionColor?: string;
}
export interface TrackStyle {
    background?: string;
    alternatingBackground?: string;
    titleColor?: string;
    titleBackground?: string;
    titleFontSize?: number;
    titleAlign?: 'left' | 'middle' | 'right';
    outline?: string;
    outlineWidth?: number;
}
export interface LegendStyle {
    position?: 'top' | 'right';
    tickColor?: string;
    labelColor?: string;
    labelFontSize?: number;
    labelFontWeight?: 'bold' | 'normal' | 'light';
    labelFontFamily?: string;
    background?: string;
    backgroundOpacity?: number;
    backgroundStroke?: string;
}
export interface AxisStyle {
    tickColor?: string;
    labelColor?: string;
    labelFontSize?: number;
    labelFontWeight?: 'bold' | 'normal' | 'light';
    labelFontFamily?: string;
    baselineColor?: string;
    gridColor?: string;
    gridStrokeWidth?: number;
    gridStrokeType?: 'solid' | 'dashed';
    gridStrokeDash?: [number, number];
}
export interface MarkStyle {
    color?: string;
    size?: number;
    stroke?: string;
    strokeWidth?: number;
    opacity?: number;
    nominalColorRange?: string[];
    quantitativeSizeRange?: [number, number];
}
export declare function getTheme(theme?: Theme): Required<CompleteThemeDeep>;
export declare const THEMES: {
    [key in Themes]: Required<CompleteThemeDeep>;
};
//# sourceMappingURL=theme.d.ts.map